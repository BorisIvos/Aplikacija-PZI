{"version":3,"sources":["cart.entity.ts"],"names":[],"mappings":";;;;;;;;AAAA,mCASiB;AACjB,6CAAqC;AACrC,6DAAoD;AACpD,+CAAuC;AAIvC;IAAA;IA0BA,CAAC;IAxBC;QADC,gCAAsB,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;gCAC1D;IAGf;QADC,gBAAM,CAAC,EAAC,IAAI,EAAC,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;gCACxC;IAOf;QALC,gBAAM,CAAC;YACN,IAAI,EAAC,WAAW;YAChB,IAAI,EAAE,YAAY;YAClB,SAAO,EAAE,cAAM,OAAA,mBAAmB,EAAnB,CAAmB;SACnC,CAAC;mCACc;IAOhB;QALC,mBAAS,CAAC,cAAM,OAAA,kBAAI,EAAJ,CAAI,EAAE,UAAC,IAAI,IAAK,OAAA,IAAI,CAAC,KAAK,EAAV,CAAU,EAAE;YAC3C,QAAQ,EAAE,UAAU;YACpB,QAAQ,EAAE,SAAS;SACpB,CAAC;QACD,oBAAU,CAAC,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,oBAAoB,EAAE,QAAQ,EAAE,CAAC,CAAC;8BACvD;IAGX;QADC,mBAAS,CAAC,cAAM,OAAA,iCAAW,EAAX,CAAW,EAAE,UAAC,WAAW,IAAK,OAAA,WAAW,CAAC,IAAI,EAAhB,CAAgB,CAAC;sCACpC;IAG5B;QADC,kBAAQ,CAAC,cAAM,OAAA,oBAAK,EAAL,CAAK,EAAE,UAAC,KAAK,IAAK,OAAA,KAAK,CAAC,IAAI,EAAV,CAAU,CAAC;+BAChC;IAzBF,IAAI;QAFhB,eAAK,CAAC,iBAAiB,EAAE,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC;QACxC,gBAAM,CAAC,MAAM,EAAE,EAAE,MAAM,EAAE,YAAY,EAAE,CAAC;OAC5B,IAAI,CA0BhB;IAAD,WAAC;CA1BD,AA0BC,IAAA;AA1BY,oBAAI","file":"cart.entity.js","sourcesContent":["import {\n  Column,\n  Entity,\n  Index,\n  JoinColumn,\n  ManyToOne,\n  OneToMany,\n  OneToOne,\n  PrimaryGeneratedColumn,\n} from \"typeorm\";\nimport { User } from \"./user.entity\";\nimport { CartArticle } from \"./cart-article.entity\";\nimport { Order } from \"./order.entity\";\n\n@Index(\"fk_cart_user_id\", [\"userId\"], {})\n@Entity(\"cart\", { schema: \"aplikacija\" })\nexport class Cart {\n  @PrimaryGeneratedColumn({ type: \"int\", name: \"cart_id\", unsigned: true })\n  cartId: number;\n\n  @Column({type:\"int\", name: \"user_id\", unsigned: true })\n  userId: number;\n\n  @Column({\n    type:\"timestamp\",\n    name: \"created_at\",\n    default: () => \"CURRENT_TIMESTAMP\",\n  })\n  createdAt: Date;\n\n  @ManyToOne(() => User, (user) => user.carts, {\n    onDelete: \"RESTRICT\",\n    onUpdate: \"CASCADE\",\n  })\n  @JoinColumn([{ name: \"user_id\", referencedColumnName: \"userId\" }])\n  user: User;\n\n  @OneToMany(() => CartArticle, (cartArticle) => cartArticle.cart)\n  cartArticles: CartArticle[];\n\n  @OneToOne(() => Order, (order) => order.cart)\n  order: Order;\n}\n"]}