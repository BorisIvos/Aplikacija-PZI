{"version":3,"sources":["user.registration.dto.ts"],"names":["Validator","require","UserRegistrationDto","__decorate","IsNotEmpty","IsEmail","allow_ip_domain","allow_utf8_local_part","require_tld","IsString","Length","IsPhoneNumber","exports"],"mappings":"6YAAA,IAAAA,UAAAC,QAAA,mBAEAC,oBAAA,WAAA,SAAAA,KAgCA,OAzBIC,WAAA,CANCH,UAAUI,aACVJ,UAAUK,QAAQ,CACfC,iBAAiB,EACjBC,uBAAuB,EACvBC,aAAa,0BAOjBL,WAAA,CAHCH,UAAUI,aACVJ,UAAUS,WACVT,UAAUU,OAAO,EAAG,8BAMrBP,WAAA,CAHCH,UAAUI,aACVJ,UAAUS,WACVT,UAAUU,OAAO,EAAG,6BAMrBP,WAAA,CAHCH,UAAUI,aACVJ,UAAUS,WACVT,UAAUU,OAAO,EAAG,6BAKrBP,WAAA,CAFCH,UAAUI,aACVJ,UAAUW,cAAc,kCAMzBR,WAAA,CAHCH,UAAUI,aACVJ,UAAUS,WACVT,UAAUU,OAAO,GAAI,mCAE1BR,EAhCA,GAAaU,QAAAV,oBAAAA","file":"user.registration.dto.min.js","sourcesContent":["import * as Validator from 'class-validator';\r\n\r\nexport class UserRegistrationDto {\r\n    @Validator.IsNotEmpty()\r\n    @Validator.IsEmail({\r\n        allow_ip_domain: false,\r\n        allow_utf8_local_part: true,\r\n        require_tld: true,\r\n    })\r\n    email: string;\r\n\r\n    @Validator.IsNotEmpty()\r\n    @Validator.IsString()\r\n    @Validator.Length(4, 128)\r\n    password: string;\r\n\r\n    @Validator.IsNotEmpty()\r\n    @Validator.IsString()\r\n    @Validator.Length(2, 64)\r\n    forename: string;\r\n\r\n    @Validator.IsNotEmpty()\r\n    @Validator.IsString()\r\n    @Validator.Length(2, 64)\r\n    surename: string;\r\n\r\n    @Validator.IsNotEmpty()\r\n    @Validator.IsPhoneNumber(null)\r\n    phoneNumber: string;\r\n\r\n    @Validator.IsNotEmpty()\r\n    @Validator.IsString()\r\n    @Validator.Length(10, 512)\r\n    postalAddress: string;\r\n}\r\n"]}