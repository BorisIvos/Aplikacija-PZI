{"version":3,"sources":["article.service.ts"],"names":["common_1","require","typeorm_1","crud_typeorm_1","article_feuters_entity_1","article_price_1","article_entity_1","api_response_class_1","ArticleService","_super","article","articlePrice","articleFeature","_this","call","this","__extends","prototype","createFullArticle","data","Promise","newArticle","Article","name","categoryId","excerpt","description","save","savedArticle","_b","sent","newArticlePrice","ArticlePrice","articleId","price","_a","features","_i","length","feature","newArticleFeature","ArticleFeature","featureId","value","findOne","relations","editFullArticle","existingArticle","status","isPromoted","ApiResponse","newPriceString","Number","toFixed","lastPrice","articlePrices","lastPriceString","remove","articleFeatures","__decorate","Injectable","__param","InjectRepository","TypeOrmCrudService","exports"],"mappings":"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","file":"article.service.min.js","sourcesContent":["import { Injectable } from \"@nestjs/common\";\r\nimport { InjectRepository } from \"@nestjs/typeorm\";\r\nimport { TypeOrmCrudService } from \"@nestjsx/crud-typeorm\";\r\nimport { ArticleFeature } from \"src/entities/article-feuters.entity\";\r\nimport { ArticlePrice } from \"src/entities/article-price\";\r\nimport { Article } from \"src/entities/article.entity\";\r\nimport { AddArticleDto } from \"src/dtos/article/add.article.dto\";\r\nimport { ApiResponse } from \"src/misc/api.response.class\";\r\nimport { Repository } from \"typeorm/repository/Repository\";\r\nimport { EditArticleDto } from \"src/dtos/article/edit.article.dtos\";\r\nimport { last } from \"rxjs\";\r\n\r\n@Injectable()\r\nexport class ArticleService extends TypeOrmCrudService<Article> {\r\n    constructor(\r\n        @InjectRepository(Article)\r\n        private readonly article: Repository<Article>,\r\n        //// Cim se spomene neki repozitori mora se evidentirati u osnovno modulu\r\n        @InjectRepository(ArticlePrice)\r\n        private readonly articlePrice: Repository<ArticlePrice>,\r\n\r\n        @InjectRepository(ArticleFeature)\r\n        private readonly articleFeature: Repository<ArticleFeature>,\r\n    ){\r\n        super(article);\r\n\r\n    }\r\n    async createFullArticle(data: AddArticleDto): Promise<Article | ApiResponse> {\r\n        let newArticle: Article = new Article();\r\n        newArticle.name         = data.name;\r\n        newArticle.categoryId   = data.categoryId;\r\n        newArticle.excerpt      = data.excerpt;\r\n        newArticle.description  = data.description;\r\n\r\n        let savedArticle = await this.article.save(newArticle);\r\n\r\n        let newArticlePrice: ArticlePrice = new ArticlePrice();\r\n        newArticlePrice.articleId = savedArticle.articleId;\r\n        newArticlePrice.price     = data.price;\r\n\r\n        await this.articlePrice.save(newArticlePrice);\r\n\r\n        for (let feature of data.features) {\r\n            let newArticleFeature: ArticleFeature = new ArticleFeature();\r\n            newArticleFeature.articleId = savedArticle.articleId;\r\n            newArticleFeature.featureId = feature.featureId;\r\n            newArticleFeature.value     = feature.value;\r\n\r\n            await this.articleFeature.save(newArticleFeature);\r\n        }\r\n\r\n        return await this.article.findOne(savedArticle.articleId, {\r\n            relations: [\r\n                \"category\",\r\n                \"articleFeatures\",\r\n                \"features\",\r\n                \"articlePrices\",\r\n                \r\n            ]\r\n        });\r\n    }\r\n\r\n    async editFullArticle(articleId: number, data: EditArticleDto): Promise<Article | ApiResponse> {\r\n        const existingArticle: Article = await this.article.findOne(articleId, {\r\n            relations: ['articlePrices']\r\n        });\r\n\r\n        if(!existingArticle){\r\n            return new ApiResponse('error', -5001, 'Article not found.');\r\n        }\r\n\r\n        existingArticle.name        = data.name;\r\n        existingArticle.categoryId  = data.categoryId;\r\n        existingArticle.excerpt     = data.excerpt;\r\n        existingArticle.description = data.description;\r\n        existingArticle.status      = data.status;\r\n        existingArticle.isPromoted  = data.isPromoted;\r\n\r\n        const savedArticle = await this.article.save(existingArticle);\r\n        if(!savedArticle) {\r\n            return new ApiResponse('error', -5002, 'Could not save new article data');\r\n        }\r\n\r\n        \r\n\r\n        const newPriceString: string = Number(data.price).toFixed(2); /// 50.1 -> 50.10\r\n\r\n        const lastPrice = existingArticle.articlePrices[existingArticle.articlePrices.length-1].price;\r\n\r\n        const lastPriceString: string = Number(lastPrice).toFixed(2);\r\n\r\n        if(newPriceString !== lastPriceString) {\r\n            const newArticlePrice = new ArticlePrice();\r\n            newArticlePrice.articleId = articleId;\r\n            newArticlePrice.price = data.price;\r\n\r\n            const savedArticlePrice = await this.articlePrice.save(newArticlePrice);\r\n            if (!savedArticlePrice) {\r\n                return new ApiResponse( 'error', -5003, 'Could not save the new article price.');\r\n            }\r\n\r\n        }\r\n\r\n        \r\n        if (data.features !== null) {\r\n            await this.articleFeature.remove(existingArticle.articleFeatures);\r\n            for (let feature of data.features) {\r\n                let newArticleFeature: ArticleFeature = new ArticleFeature();\r\n                newArticleFeature.articleId = articleId;\r\n                newArticleFeature.featureId = feature.featureId;\r\n                newArticleFeature.value     = feature.value;\r\n    \r\n                await this.articleFeature.save(newArticleFeature);\r\n            }\r\n    \r\n        }\r\n\r\n        return await this.article.findOne(articleId, {\r\n            relations: [\r\n                \"category\",\r\n                \"articleFeatures\",\r\n                \"features\",\r\n                \"articlePrices\",\r\n                \r\n            ]\r\n        });\r\n        \r\n    }\r\n\r\n }\r\n"]}