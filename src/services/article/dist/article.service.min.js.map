{"version":3,"sources":["article.service.ts"],"names":["common_1","require","typeorm_1","crud_typeorm_1","article_feuters_entity_1","article_price_1","article_entity_1","ArticleService","_super","article","articlePrice","articleFeature","_this","call","this","__extends","prototype","createFullArticle","data","Promise","newArticle","Article","name","categoryId","excerpt","description","save","savedArticle","_b","sent","newArticlePrice","ArticlePrice","articleId","price","_a","features","_i","length","feature","newArticleFeature","ArticleFeature","featureId","value","findOne","relations","__decorate","Injectable","__param","InjectRepository","TypeOrmCrudService","exports"],"mappings":"ktEAAA,IAAAA,SAAAC,QAAA,kBACAC,UAAAD,QAAA,mBACAE,eAAAF,QAAA,yBACAG,yBAAAH,QAAA,mCACAI,gBAAAJ,QAAA,0BACAK,iBAAAL,QAAA,2BAMAM,eAAA,SAAAC,GACI,SAAAD,EAEqBE,EAGAC,EAGAC,GARrB,IAAAC,EAUIJ,EAAAK,KAAAC,KAAML,IAAQK,YARGF,EAAAH,QAAAA,EAGAG,EAAAF,aAAAA,EAGAE,EAAAD,eAAAA,IAyCrB,OAlDgCI,UAAAR,EAAAC,GAc1BD,EAAAS,UAAAC,kBAAN,SAAwBC,gCAAsBC,QAAO,wFAO9B,OANfC,EAAsB,IAAId,iBAAAe,SACnBC,KAAeJ,EAAKI,KAC/BF,EAAWG,WAAeL,EAAKK,WAC/BH,EAAWI,QAAeN,EAAKM,QAC/BJ,EAAWK,YAAeP,EAAKO,YAEZ,CAAA,EAAMX,KAAKL,QAAQiB,KAAKN,WAM3C,OANIO,EAAeC,EAAAC,QAEfC,EAAgC,IAAIzB,gBAAA0B,cACxBC,UAAYL,EAAaK,UACzCF,EAAgBG,MAAYf,EAAKe,MAEjC,CAAA,EAAMnB,KAAKJ,aAAagB,KAAKI,WAA7BF,EAAAC,WAEoBK,EAAAhB,EAAKiB,iCAALC,EAAAF,EAAAG,QAAXC,EAAOJ,EAAAE,IACRG,EAAoC,IAAInC,yBAAAoC,gBAC1BR,UAAYL,EAAaK,UAC3CO,EAAkBE,UAAYH,EAAQG,UACtCF,EAAkBG,MAAYJ,EAAQI,MAEtC,CAAA,EAAM5B,KAAKH,eAAee,KAAKa,KANF,CAAA,EAAA,UAM7BX,EAAAC,+BANgBO,iBASb,MAAA,CAAA,EAAMtB,KAAKL,QAAQkC,QAAQhB,EAAaK,UAAW,CACtDY,UAAW,CACP,WACA,kBACA,WACA,2BALR,MAAA,CAAA,EAAOhB,EAAAC,cAtCFtB,EAAcsC,WAAA,CAD1B7C,SAAA8C,aAGQC,QAAA,EAAA7C,UAAA8C,iBAAiB1C,iBAAAe,UAGjB0B,QAAA,EAAA7C,UAAA8C,iBAAiB3C,gBAAA0B,eAGjBgB,QAAA,EAAA7C,UAAA8C,iBAAiB5C,yBAAAoC,kBARbjC,GAAb,CAAoCJ,eAAA8C,oBAAvBC,QAAA3C,eAAAA","file":"article.service.min.js","sourcesContent":["import { Injectable } from \"@nestjs/common\";\r\nimport { InjectRepository } from \"@nestjs/typeorm\";\r\nimport { TypeOrmCrudService } from \"@nestjsx/crud-typeorm\";\r\nimport { ArticleFeature } from \"entities/article-feuters.entity\";\r\nimport { ArticlePrice } from \"entities/article-price\";\r\nimport { Article } from \"entities/article.entity\";\r\nimport { AddArticleDto } from \"src/dtos/article/add.article.dto\";\r\nimport { ApiResponse } from \"src/misc/api.response.class\";\r\nimport { Repository } from \"typeorm/repository/Repository\";\r\n\r\n@Injectable()\r\nexport class ArticleService extends TypeOrmCrudService<Article> {\r\n    constructor(\r\n        @InjectRepository(Article)\r\n        private readonly article: Repository<Article>,\r\n        //// Cim se spomene neki repozitori mora se evidentirati u osnovno modulu\r\n        @InjectRepository(ArticlePrice)\r\n        private readonly articlePrice: Repository<ArticlePrice>,\r\n\r\n        @InjectRepository(ArticleFeature)\r\n        private readonly articleFeature: Repository<ArticleFeature>,\r\n    ){\r\n        super(article);\r\n\r\n    }\r\n    async createFullArticle(data: AddArticleDto): Promise<Article | ApiResponse> {\r\n        let newArticle: Article = new Article();\r\n        newArticle.name         = data.name;\r\n        newArticle.categoryId   = data.categoryId;\r\n        newArticle.excerpt      = data.excerpt;\r\n        newArticle.description  = data.description;\r\n\r\n        let savedArticle = await this.article.save(newArticle);\r\n\r\n        let newArticlePrice: ArticlePrice = new ArticlePrice();\r\n        newArticlePrice.articleId = savedArticle.articleId;\r\n        newArticlePrice.price     = data.price;\r\n\r\n        await this.articlePrice.save(newArticlePrice);\r\n\r\n        for (let feature of data.features) {\r\n            let newArticleFeature: ArticleFeature = new ArticleFeature();\r\n            newArticleFeature.articleId = savedArticle.articleId;\r\n            newArticleFeature.featureId = feature.featureId;\r\n            newArticleFeature.value     = feature.value;\r\n\r\n            await this.articleFeature.save(newArticleFeature);\r\n        }\r\n\r\n        return await this.article.findOne(savedArticle.articleId, {\r\n            relations: [\r\n                \"category\",\r\n                \"articleFeatures\",\r\n                \"features\",\r\n                \"articlePrices\",\r\n                \r\n            ]\r\n        });\r\n    }\r\n\r\n\r\n    }\r\n"]}