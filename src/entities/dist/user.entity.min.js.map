{"version":3,"sources":["user.entity.ts"],"names":["typeorm_1","require","cart_entity_1","Validator","User","__decorate","PrimaryGeneratedColumn","type","name","unsigned","Column","unique","length","IsNotEmpty","IsEmail","allow_ip_domain","allow_utf8_local_part","require_tld","IsHash","IsString","Length","IsPhoneNumber","OneToMany","Cart","cart","user","Index","Entity","exports"],"mappings":"6YAAA,IAAAA,UAAAC,QAAA,WAOAC,cAAAD,QAAA,iBACAE,UAAAF,QAAA,mBAKAG,KAAA,WAAA,SAAAA,KA2DA,OAzDEC,WAAA,CADCL,UAAAM,uBAAuB,CAAEC,KAAM,MAAOC,KAAM,UAAWC,UAAU,2BAclEJ,WAAA,CAXCL,UAAAU,OAAO,CACNH,KAAM,UACNI,QAAQ,EACRC,OAAQ,MAETT,UAAUU,aACVV,UAAUW,QAAQ,CACjBC,iBAAiB,EACjBC,uBAAuB,EACvBC,aAAa,0BAWfZ,WAAA,CAPCL,UAAAU,OAAO,CACNH,KAAM,UACNC,KAAM,gBACNI,OAAQ,MAETT,UAAUU,aACVV,UAAUe,OAAO,uCAOlBb,WAAA,CAJCL,UAAAU,OAAO,CAAEH,KAAM,UAAWK,OAAQ,KAClCT,UAAUU,aACVV,UAAUgB,WACVhB,UAAUiB,OAAO,EAAG,6BAOrBf,WAAA,CAJCL,UAAAU,OAAO,CAAEH,KAAM,UAAWK,OAAQ,KAClCT,UAAUU,aACVV,UAAUgB,WACVhB,UAAUiB,OAAO,EAAG,4BAWrBf,WAAA,CARCL,UAAAU,OAAO,CACNH,KAAM,UACNC,KAAM,eACNG,QAAQ,EACRC,OAAQ,KAETT,UAAUU,aACVV,UAAUkB,cAAc,kCAOzBhB,WAAA,CAJCL,UAAAU,OAAO,CAAEH,KAAM,OAAQC,KAAM,mBAC7BL,UAAUU,aACVV,UAAUgB,WACVhB,UAAUiB,OAAO,GAAI,mCAOtBf,WAAA,CAJCL,UAAAsB,UACC,WAAM,OAAApB,cAAAqB,MACN,SAAAC,GAAQ,OAAAA,EAAKC,6BAxDJrB,EAAIC,WAAA,CAHhBL,UAAA0B,MAAM,gBAAiB,CAAC,SAAU,CAAEf,QAAQ,IAC5CX,UAAA0B,MAAM,uBAAwB,CAAC,eAAgB,CAAEf,QAAQ,IACzDX,UAAA2B,OAAO,SACKvB,GAAb,GAAawB,QAAAxB,KAAAA","file":"user.entity.min.js","sourcesContent":["import {\n  Column,\n  Entity,\n  Index,\n  OneToMany,\n  PrimaryGeneratedColumn\n} from \"typeorm\";\nimport { Cart } from \"./cart.entity\";\nimport * as Validator from 'class-validator';\n\n@Index(\"uq_user_email\", [\"email\"], { unique: true })\n@Index(\"uq_user_phone_number\", [\"phoneNumber\"], { unique: true })\n@Entity(\"user\")\nexport class User {\n  @PrimaryGeneratedColumn({ type: \"int\", name: \"user_id\", unsigned: true })\n  userId: number;\n\n  @Column({\n    type: \"varchar\",\n    unique: true,\n    length: 255\n  })\n  @Validator.IsNotEmpty()\n  @Validator.IsEmail({\n    allow_ip_domain: false,\n    allow_utf8_local_part: true,\n    require_tld: true,\n  })\n  email: string;\n\n  @Column({\n    type: \"varchar\",\n    name: \"password_hash\",\n    length: 128\n  })\n  @Validator.IsNotEmpty()\n  @Validator.IsHash('sha512')\n  passwordHash: string;\n\n  @Column({ type: \"varchar\", length: 64 })\n  @Validator.IsNotEmpty()\n  @Validator.IsString()\n  @Validator.Length(2, 64)\n  forename: string;\n\n  @Column({ type: \"varchar\", length: 64 })\n  @Validator.IsNotEmpty()\n  @Validator.IsString()\n  @Validator.Length(2, 64)\n  surname: string;\n\n  @Column({\n    type: \"varchar\",\n    name: \"phone_number\",\n    unique: true,\n    length: 24\n  })\n  @Validator.IsNotEmpty()\n  @Validator.IsPhoneNumber(null)\n  phoneNumber: string;\n\n  @Column({ type: \"text\", name: \"postal_address\" })\n  @Validator.IsNotEmpty()\n  @Validator.IsString()\n  @Validator.Length(10, 512)\n  postalAddress: string;\n\n  @OneToMany(\n    () => Cart,\n    cart => cart.user\n  )\n  carts: Cart[];\n}\n"]}