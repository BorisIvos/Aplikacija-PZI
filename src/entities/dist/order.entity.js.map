{"version":3,"sources":["order.entity.ts"],"names":[],"mappings":";;;;;;;;AAAA,mCAOiB;AACjB,6CAAqC;AACrC,2CAA6C;AAI7C;IAAA;IAoCA,CAAC;IAlCC;QADC,gCAAsB,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;kCAC1D;IAOhB;QALC,gBAAM,CAAC;YACN,IAAI,EAAE,WAAW;YACjB,IAAI,EAAE,YAAY;YAClB,SAAO,EAAE,cAAM,OAAA,mBAAmB,EAAnB,CAAmB;SACnC,CAAC;oCACc;IAQhB;QANC,gBAAM,CAAC;YACN,IAAI,EAAE,KAAK;YACX,IAAI,EAAE,SAAS;YACf,MAAM,EAAE,IAAI;YACZ,QAAQ,EAAE,IAAI;SACf,CAAC;iCACa;IAUf;QARC,gBAAM,CAAC;YACN,IAAI,EAAE,MAAM;YACZ,MAAI,EAAE,CAAC,UAAU,EAAE,UAAU,EAAE,SAAS,EAAE,SAAS,CAAC;YACpD,SAAO,EAAE,cAAM,OAAA,WAAW,EAAX,CAAW;SAC3B,CAAC;QACD,SAAS,CAAC,UAAU,EAAE;QACtB,SAAS,CAAC,QAAQ,EAAE;QACpB,SAAS,CAAC,IAAI,CAAC,CAAC,UAAU,EAAE,UAAU,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;iCACP;IAQxD;QANC,kBAAQ,CACP,cAAM,OAAA,kBAAI,EAAJ,CAAI,EACV,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,KAAK,EAAV,CAAU,EAClB,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAE,SAAS,EAAE,CAC/C;QACA,oBAAU,CAAC,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,oBAAoB,EAAE,QAAQ,EAAE,CAAC,CAAC;+BACvD;IAnCA,KAAK;QAFjB,eAAK,CAAC,kBAAkB,EAAE,CAAC,QAAQ,CAAC,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;QACvD,gBAAM,CAAC,OAAO,CAAC;OACH,KAAK,CAoCjB;IAAD,YAAC;CApCD,AAoCC,IAAA;AApCY,sBAAK","file":"order.entity.js","sourcesContent":["import {\n  Column,\n  Entity,\n  Index,\n  JoinColumn,\n  OneToOne,\n  PrimaryGeneratedColumn\n} from \"typeorm\";\nimport { Cart } from \"./cart.entity\";\nimport * as Validator from 'class-validator';\n\n@Index(\"uq_order_cart_id\", [\"cartId\"], { unique: true })\n@Entity(\"order\")\nexport class Order {\n  @PrimaryGeneratedColumn({ type: \"int\", name: \"order_id\", unsigned: true })\n  orderId: number;\n\n  @Column({\n    type: \"timestamp\",\n    name: \"created_at\",\n    default: () => \"CURRENT_TIMESTAMP\"\n  })\n  createdAt: Date;\n\n  @Column({\n    type: \"int\",\n    name: \"cart_id\",\n    unique: true,\n    unsigned: true\n  })\n  cartId: number;\n\n  @Column({\n    type: \"enum\",\n    enum: [\"rejected\", \"accepted\", \"shipped\", \"pending\"],\n    default: () => \"'pending'\"\n  })\n  @Validator.IsNotEmpty()\n  @Validator.IsString()\n  @Validator.IsIn([\"rejected\", \"accepted\", \"shipped\", \"pending\"])\n  status: \"rejected\" | \"accepted\" | \"shipped\" | \"pending\";\n\n  @OneToOne(\n    () => Cart,\n    cart => cart.order,\n    { onDelete: \"NO ACTION\", onUpdate: \"CASCADE\" }\n  )\n  @JoinColumn([{ name: \"cart_id\", referencedColumnName: \"cartId\" }])\n  cart: Cart;\n}\n\n"]}