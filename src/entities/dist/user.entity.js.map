{"version":3,"sources":["user.entity.ts"],"names":[],"mappings":";;;;;;;;AAAA,mCAMiB;AACjB,6CAAqC;AACrC,2CAA6C;AAK7C;IAAA;IA2DA,CAAC;IAzDC;QADC,gCAAsB,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;gCAC1D;IAaf;QAXC,gBAAM,CAAC;YACN,IAAI,EAAE,SAAS;YACf,MAAM,EAAE,IAAI;YACZ,MAAM,EAAE,GAAG;SACZ,CAAC;QACD,SAAS,CAAC,UAAU,EAAE;QACtB,SAAS,CAAC,OAAO,CAAC;YACjB,eAAe,EAAE,KAAK;YACtB,qBAAqB,EAAE,IAAI;YAC3B,WAAW,EAAE,IAAI;SAClB,CAAC;+BACY;IASd;QAPC,gBAAM,CAAC;YACN,IAAI,EAAE,SAAS;YACf,IAAI,EAAE,eAAe;YACrB,MAAM,EAAE,GAAG;SACZ,CAAC;QACD,SAAS,CAAC,UAAU,EAAE;QACtB,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC;sCACN;IAMrB;QAJC,gBAAM,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC;QACvC,SAAS,CAAC,UAAU,EAAE;QACtB,SAAS,CAAC,QAAQ,EAAE;QACpB,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC;kCACP;IAMjB;QAJC,gBAAM,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC;QACvC,SAAS,CAAC,UAAU,EAAE;QACtB,SAAS,CAAC,QAAQ,EAAE;QACpB,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC;iCACR;IAUhB;QARC,gBAAM,CAAC;YACN,IAAI,EAAE,SAAS;YACf,IAAI,EAAE,cAAc;YACpB,MAAM,EAAE,IAAI;YACZ,MAAM,EAAE,EAAE;SACX,CAAC;QACD,SAAS,CAAC,UAAU,EAAE;QACtB,SAAS,CAAC,aAAa,CAAC,IAAI,CAAC;qCACV;IAMpB;QAJC,gBAAM,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,gBAAgB,EAAE,CAAC;QAChD,SAAS,CAAC,UAAU,EAAE;QACtB,SAAS,CAAC,QAAQ,EAAE;QACpB,SAAS,CAAC,MAAM,CAAC,EAAE,EAAE,GAAG,CAAC;uCACJ;IAMtB;QAJC,mBAAS,CACR,cAAM,OAAA,kBAAI,EAAJ,CAAI,EACV,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,IAAI,EAAT,CAAS,CAClB;+BACa;IA1DH,IAAI;QAHhB,eAAK,CAAC,eAAe,EAAE,CAAC,OAAO,CAAC,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;QACnD,eAAK,CAAC,sBAAsB,EAAE,CAAC,aAAa,CAAC,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;QAChE,gBAAM,CAAC,MAAM,CAAC;OACF,IAAI,CA2DhB;IAAD,WAAC;CA3DD,AA2DC,IAAA;AA3DY,oBAAI","file":"user.entity.js","sourcesContent":["import {\n  Column,\n  Entity,\n  Index,\n  OneToMany,\n  PrimaryGeneratedColumn\n} from \"typeorm\";\nimport { Cart } from \"./cart.entity\";\nimport * as Validator from 'class-validator';\n\n@Index(\"uq_user_email\", [\"email\"], { unique: true })\n@Index(\"uq_user_phone_number\", [\"phoneNumber\"], { unique: true })\n@Entity(\"user\")\nexport class User {\n  @PrimaryGeneratedColumn({ type: \"int\", name: \"user_id\", unsigned: true })\n  userId: number;\n\n  @Column({\n    type: \"varchar\",\n    unique: true,\n    length: 255\n  })\n  @Validator.IsNotEmpty()\n  @Validator.IsEmail({\n    allow_ip_domain: false,\n    allow_utf8_local_part: true,\n    require_tld: true,\n  })\n  email: string;\n\n  @Column({\n    type: \"varchar\",\n    name: \"password_hash\",\n    length: 128\n  })\n  @Validator.IsNotEmpty()\n  @Validator.IsHash('sha512')\n  passwordHash: string;\n\n  @Column({ type: \"varchar\", length: 64 })\n  @Validator.IsNotEmpty()\n  @Validator.IsString()\n  @Validator.Length(2, 64)\n  forename: string;\n\n  @Column({ type: \"varchar\", length: 64 })\n  @Validator.IsNotEmpty()\n  @Validator.IsString()\n  @Validator.Length(2, 64)\n  surname: string;\n\n  @Column({\n    type: \"varchar\",\n    name: \"phone_number\",\n    unique: true,\n    length: 24\n  })\n  @Validator.IsNotEmpty()\n  @Validator.IsPhoneNumber(null)\n  phoneNumber: string;\n\n  @Column({ type: \"text\", name: \"postal_address\" })\n  @Validator.IsNotEmpty()\n  @Validator.IsString()\n  @Validator.Length(10, 512)\n  postalAddress: string;\n\n  @OneToMany(\n    () => Cart,\n    cart => cart.user\n  )\n  carts: Cart[];\n}\n"]}