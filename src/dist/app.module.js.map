{"version":3,"sources":["app.module.ts"],"names":[],"mappings":";;;;;;;;AAAA,yCAAwC;AACxC,2CAAgD;AAChD,wEAAsE;AACtE,sEAA8D;AAC9D,0EAAiE;AACjE,wDAAsD;AACtD,0DAAkD;AAClD,oEAA2D;AAC3D,oDAA4C;AAC5C,4DAAoD;AACpD,4DAAmD;AACnD,sDAA8C;AAC9C,sDAA8C;AAC9C,oDAA4C;AAC5C,mDAAiD;AACjD,wFAAsF;AAGtF,8CAAqB,CAAA;AA+BrB;IAAA;IAAwB,CAAC;IAAZ,SAAS;QA9BrB,eAAM,CAAC;YACN,OAAO,EAAE;gBACP,uBAAa,CAAC,OAAO,CAAC;oBACpB,IAAI,EAAE,OAAO;oBACb,IAAI,EAAE,8CAAqB,CAAC,QAAQ;oBACpC,IAAI,EAAE,IAAI;oBACV,QAAQ,EAAE,8CAAqB,CAAC,QAAQ;oBACxC,QAAQ,EAAE,8CAAqB,CAAC,QAAQ;oBACxC,QAAQ,EAAE,8CAAqB,CAAC,QAAQ;oBACxC,QAAQ,EAAE,CAAC,oCAAa;wBACb,uCAAc;wBACd,4BAAY;wBACZ,wBAAO;wBACP,iCAAW;wBACX,kBAAI;wBACJ,0BAAQ;wBACR,yBAAO;wBACP,oBAAK;wBACL,oBAAK;wBACL,kBAAI;qBAGd;iBAEF,CAAC;gBACF,uBAAa,CAAC,UAAU,CAAC,CAAE,oCAAa,CAAC,CAAC;aAC3C;YACD,WAAW,EAAE,CAAC,8BAAa,CAAC;YAC5B,SAAS,EAAE,CAAC,4CAAoB,CAAC;SAClC,CAAC;OACW,SAAS,CAAG;IAAD,gBAAC;CAAzB,AAAyB,IAAA;AAAZ,8BAAS","file":"app.module.js","sourcesContent":["import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { DatabaseConfiguration } from 'config/database.configuration';\nimport { Administrator } from 'entities/administrator.entity';\nimport { ArticleFeature } from 'entities/article-feuters.entity';\nimport { ArticlePrice } from 'entities/article-price';\nimport { Article } from 'entities/article.entity';\nimport { CartArticle } from 'entities/cart-article.entity';\nimport { Cart } from 'entities/cart.entity';\nimport { Category } from 'entities/category.entity';\nimport { Feature } from 'entities/features.entity';\nimport { Order } from 'entities/order.entity';\nimport { Photo } from 'entities/photo.entity';\nimport { User } from 'entities/user.entity';\nimport { AppController } from './app.controller';\nimport { AdministratorService } from './services/administrator/administrator.service';\n\n\nDatabaseConfiguration\n@Module({\n  imports: [\n    TypeOrmModule.forRoot({\n      type: 'mysql',\n      host: DatabaseConfiguration.hostname,\n      port: 3306,\n      username: DatabaseConfiguration.username,\n      password: DatabaseConfiguration.password,\n      database: DatabaseConfiguration.database,\n      entities: [Administrator,\n                 ArticleFeature,\n                 ArticlePrice,\n                 Article,\n                 CartArticle,\n                 Cart,\n                 Category,\n                 Feature,\n                 Order,\n                 Photo,\n                 User,\n      \n      \n      ]\n\n    }),\n    TypeOrmModule.forFeature([ Administrator])\n  ],\n  controllers: [AppController],\n  providers: [AdministratorService],\n})\nexport class AppModule {}\n"]}