{"version":3,"sources":["app.module.ts"],"names":[],"mappings":";;;;;;;;AAAA,yCAAwE;AACxE,2CAAgD;AAChD,wEAAsE;AACtE,0EAAkE;AAClE,8EAAqE;AACrE,4DAA0D;AAC1D,8DAAsD;AACtD,wEAA+D;AAC/D,wDAAgD;AAChD,gEAAwD;AACxD,8DAAsD;AACtD,0DAAkD;AAClD,0DAAkD;AAClD,wDAAgD;AAChD,uFAAqF;AACrF,2EAAyE;AACzE,qEAAmE;AACnE,6EAA2E;AAC3E,2EAAyE;AACzE,+DAA6D;AAC7D,2EAAwE;AACxE,iEAA8D;AAC9D,wFAAsF;AACtF,uFAAqF;AACrF,sEAAoE;AACpE,6DAA2D;AAC3D,+DAA6D;AAC7D,sEAAoE;AACpE,kEAA+D;AAC/D,6DAA2D;AAG3D,8CAAqB,CAAA;AAoErB;IAAA;IAQA,CAAC;IAPC,6BAAS,GAAT,UAAU,QAA4B;QACpC,QAAQ;aACP,KAAK,CAAC,+BAAa,CAAC;aACpB,OAAO,CAAC,QAAQ,CAAC;aACjB,SAAS,CAAC,OAAO,CAAC,CAAC;IACtB,CAAC;IANU,SAAS;QAnErB,eAAM,CAAC;YACN,OAAO,EAAE;gBACP,uBAAa,CAAC,OAAO,CAAC;oBACpB,IAAI,EAAE,OAAO;oBACb,IAAI,EAAE,8CAAqB,CAAC,QAAQ;oBACpC,IAAI,EAAE,IAAI;oBACV,QAAQ,EAAE,8CAAqB,CAAC,QAAQ;oBACxC,QAAQ,EAAE,8CAAqB,CAAC,QAAQ;oBACxC,QAAQ,EAAE,8CAAqB,CAAC,QAAQ;oBACxC,QAAQ,EAAE,CAAC,oCAAa;wBACb,uCAAc;wBACd,4BAAY;wBACZ,wBAAO;wBACP,iCAAW;wBACX,kBAAI;wBACJ,0BAAQ;wBACR,wBAAO;wBACP,oBAAK;wBACL,oBAAK;wBACL,kBAAI;qBAGd;iBAEF,CAAC;gBACF,uBAAa,CAAC,UAAU,CAAC;oBACvB,oCAAa;oBACb,uCAAc;oBACd,4BAAY;oBACZ,wBAAO;oBACP,iCAAW;oBACX,kBAAI;oBACJ,0BAAQ;oBACR,wBAAO;oBACP,oBAAK;oBACL,oBAAK;oBACL,kBAAI;iBAEH,CAAC;aACL;YACD,WAAW,EAAE;gBACX,8BAAa;gBACb,kDAAuB;gBACvB,wCAAkB;gBAClB,sCAAiB;gBACjB,gCAAc;gBACd,sCAAiB;gBACjB,yCAAkB;aAInB;YACD,SAAS,EAAE;gBACT,4CAAoB;gBACpB,kCAAe;gBACf,gCAAc;gBACd,6BAAY;gBACZ,gCAAc;gBACd,0BAAW;gBACX,0BAAW;gBACX,4BAAY;aAEb;YACD,OAAO,EAAC;gBACN,4CAAoB;aACrB;SACF,CAAC;OACW,SAAS,CAQrB;IAAD,gBAAC;CARD,AAQC,IAAA;AARY,8BAAS","file":"app.module.js","sourcesContent":["import { MiddlewareConsumer, Module, NestModule } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { DatabaseConfiguration } from 'config/database.configuration';\nimport { Administrator } from 'src/entities/administrator.entity';\nimport { ArticleFeature } from 'src/entities/article-feuters.entity';\nimport { ArticlePrice } from 'src/entities/article-price';\nimport { Article } from 'src/entities/article.entity';\nimport { CartArticle } from 'src/entities/cart-article.entity';\nimport { Cart } from 'src/entities/cart.entity';\nimport { Category } from 'src/entities/category.entity';\nimport { Feature } from 'src/entities/feature.entity';\nimport { Order } from 'src/entities/order.entity';\nimport { Photo } from 'src/entities/photo.entity';\nimport { User } from 'src/entities/user.entity';\nimport { AdministratorController } from './controllers/api/administrator.controller';\nimport { ArticleController } from './controllers/api/article.controller';\nimport { AuthController } from './controllers/api/auth.controller';\nimport { CategoryController } from './controllers/api/category.controller';\nimport { FeatureController } from './controllers/api/feature.controller';\nimport { AppController } from './controllers/app.controller';\nimport { UserCartController } from './controllers/user.cart.controller';\nimport { AuthMidleware } from './middlewares/auth.middleware';\nimport { AdministratorService } from './services/administrator/administrator.service';\nimport { CategoryService } from './services/administrator/category/category.service';\nimport { ArticleService } from './services/article/article.service';\nimport { CartService } from './services/cart/cart.service';\nimport { OrderService } from './services/cart/order.service';\nimport { FeatureService } from './services/feature/feature.service';\nimport { PhotoService } from './services/photo/photo.services';\nimport { UserService } from './services/user/user.service';\n\n\nDatabaseConfiguration\n@Module({\n  imports: [\n    TypeOrmModule.forRoot({\n      type: 'mysql',\n      host: DatabaseConfiguration.hostname,\n      port: 3306,\n      username: DatabaseConfiguration.username,\n      password: DatabaseConfiguration.password,\n      database: DatabaseConfiguration.database,\n      entities: [Administrator,\n                 ArticleFeature,\n                 ArticlePrice,\n                 Article,\n                 CartArticle,\n                 Cart,\n                 Category,\n                 Feature,\n                 Order,\n                 Photo,\n                 User,\n      \n      \n      ]\n\n    }),\n    TypeOrmModule.forFeature([\n      Administrator,\n      ArticleFeature,\n      ArticlePrice,\n      Article,\n      CartArticle,\n      Cart,\n      Category,\n      Feature,\n      Order,\n      Photo,\n      User,\n\n      ])\n  ],\n  controllers: [\n    AppController,\n    AdministratorController,\n    CategoryController,\n    ArticleController,\n    AuthController,\n    FeatureController,\n    UserCartController,\n\n  \n  \n  ],\n  providers: [\n    AdministratorService,\n    CategoryService,\n    ArticleService,\n    PhotoService,\n    FeatureService,\n    UserService,\n    CartService,\n    OrderService,\n\n  ],\n  exports:[\n    AdministratorService,\n  ]\n})\nexport class AppModule implements NestModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer\n    .apply(AuthMidleware)\n    .exclude('auth/*')\n    .forRoutes('api/*');\n  }\n\n}\n"]}