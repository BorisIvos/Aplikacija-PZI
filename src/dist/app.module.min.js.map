{"version":3,"sources":["app.module.ts"],"names":["common_1","require","typeorm_1","database_configuration_1","administrator_entity_1","article_feuters_entity_1","article_price_1","article_entity_1","cart_article_entity_1","cart_entity_1","category_entity_1","feature_entity_1","order_entity_1","photo_entity_1","user_entity_1","administrator_controller_1","article_controller_1","auth_controller_1","category_controller_1","feature_controller_1","app_controller_1","user_cart_controller_1","auth_middleware_1","administrator_service_1","category_service_1","article_service_1","cart_service_1","feature_service_1","photo_services_1","user_service_1","DatabaseConfiguration","AppModule","prototype","configure","consumer","apply","AuthMidleware","exclude","forRoutes","__decorate","Module","imports","TypeOrmModule","forRoot","type","host","hostname","port","username","password","database","entities","Administrator","ArticleFeature","ArticlePrice","Article","CartArticle","Cart","Category","Feature","Order","Photo","User","forFeature","controllers","AppController","AdministratorController","CategoryController","ArticleController","AuthController","FeatureController","UserCartController","providers","AdministratorService","CategoryService","ArticleService","PhotoService","FeatureService","UserService","CartService","exports"],"mappings":"6YAAA,IAAAA,SAAAC,QAAA,kBACAC,UAAAD,QAAA,mBACAE,yBAAAF,QAAA,iCACAG,uBAAAH,QAAA,qCACAI,yBAAAJ,QAAA,uCACAK,gBAAAL,QAAA,8BACAM,iBAAAN,QAAA,+BACAO,sBAAAP,QAAA,oCACAQ,cAAAR,QAAA,4BACAS,kBAAAT,QAAA,gCACAU,iBAAAV,QAAA,+BACAW,eAAAX,QAAA,6BACAY,eAAAZ,QAAA,6BACAa,cAAAb,QAAA,4BACAc,2BAAAd,QAAA,8CACAe,qBAAAf,QAAA,wCACAgB,kBAAAhB,QAAA,qCACAiB,sBAAAjB,QAAA,yCACAkB,qBAAAlB,QAAA,wCACAmB,iBAAAnB,QAAA,gCACAoB,uBAAApB,QAAA,sCACAqB,kBAAArB,QAAA,iCACAsB,wBAAAtB,QAAA,kDACAuB,mBAAAvB,QAAA,sDACAwB,kBAAAxB,QAAA,sCACAyB,eAAAzB,QAAA,gCACA0B,kBAAA1B,QAAA,sCACA2B,iBAAA3B,QAAA,mCACA4B,eAAA5B,QAAA,gCAGAE,yBAAA2B,sBAmEA,IAAAC,UAAA,WAAA,SAAAA,KAQA,OAPEA,EAAAC,UAAAC,UAAA,SAAUC,GACRA,EACCC,MAAMb,kBAAAc,eACNC,QAAQ,UACRC,UAAU,UALFP,EAASQ,WAAA,CAlErBvC,SAAAwC,OAAO,CACNC,QAAS,CACPvC,UAAAwC,cAAcC,QAAQ,CACpBC,KAAM,QACNC,KAAM1C,yBAAA2B,sBAAsBgB,SAC5BC,KAAM,KACNC,SAAU7C,yBAAA2B,sBAAsBkB,SAChCC,SAAU9C,yBAAA2B,sBAAsBmB,SAChCC,SAAU/C,yBAAA2B,sBAAsBoB,SAChCC,SAAU,CAAC/C,uBAAAgD,cACA/C,yBAAAgD,eACA/C,gBAAAgD,aACA/C,iBAAAgD,QACA/C,sBAAAgD,YACA/C,cAAAgD,KACA/C,kBAAAgD,SACA/C,iBAAAgD,QACA/C,eAAAgD,MACA/C,eAAAgD,MACA/C,cAAAgD,QAMb5D,UAAAwC,cAAcqB,WAAW,CACvB3D,uBAAAgD,cACA/C,yBAAAgD,eACA/C,gBAAAgD,aACA/C,iBAAAgD,QACA/C,sBAAAgD,YACA/C,cAAAgD,KACA/C,kBAAAgD,SACA/C,iBAAAgD,QACA/C,eAAAgD,MACA/C,eAAAgD,MACA/C,cAAAgD,QAIJE,YAAa,CACX5C,iBAAA6C,cACAlD,2BAAAmD,wBACAhD,sBAAAiD,mBACAnD,qBAAAoD,kBACAnD,kBAAAoD,eACAlD,qBAAAmD,kBACAjD,uBAAAkD,oBAKFC,UAAW,CACTjD,wBAAAkD,qBACAjD,mBAAAkD,gBACAjD,kBAAAkD,eACA/C,iBAAAgD,aACAjD,kBAAAkD,eACAhD,eAAAiD,YACApD,eAAAqD,aAGFC,QAAQ,CACNzD,wBAAAkD,yBAGS1C,GAAb,GAAaiD,QAAAjD,UAAAA","file":"app.module.min.js","sourcesContent":["import { MiddlewareConsumer, Module, NestModule } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { DatabaseConfiguration } from 'config/database.configuration';\nimport { Administrator } from 'src/entities/administrator.entity';\nimport { ArticleFeature } from 'src/entities/article-feuters.entity';\nimport { ArticlePrice } from 'src/entities/article-price';\nimport { Article } from 'src/entities/article.entity';\nimport { CartArticle } from 'src/entities/cart-article.entity';\nimport { Cart } from 'src/entities/cart.entity';\nimport { Category } from 'src/entities/category.entity';\nimport { Feature } from 'src/entities/feature.entity';\nimport { Order } from 'src/entities/order.entity';\nimport { Photo } from 'src/entities/photo.entity';\nimport { User } from 'src/entities/user.entity';\nimport { AdministratorController } from './controllers/api/administrator.controller';\nimport { ArticleController } from './controllers/api/article.controller';\nimport { AuthController } from './controllers/api/auth.controller';\nimport { CategoryController } from './controllers/api/category.controller';\nimport { FeatureController } from './controllers/api/feature.controller';\nimport { AppController } from './controllers/app.controller';\nimport { UserCartController } from './controllers/user.cart.controller';\nimport { AuthMidleware } from './middlewares/auth.middleware';\nimport { AdministratorService } from './services/administrator/administrator.service';\nimport { CategoryService } from './services/administrator/category/category.service';\nimport { ArticleService } from './services/article/article.service';\nimport { CartService } from './services/cart/cart.service';\nimport { FeatureService } from './services/feature/feature.service';\nimport { PhotoService } from './services/photo/photo.services';\nimport { UserService } from './services/user/user.service';\n\n\nDatabaseConfiguration\n@Module({\n  imports: [\n    TypeOrmModule.forRoot({\n      type: 'mysql',\n      host: DatabaseConfiguration.hostname,\n      port: 3306,\n      username: DatabaseConfiguration.username,\n      password: DatabaseConfiguration.password,\n      database: DatabaseConfiguration.database,\n      entities: [Administrator,\n                 ArticleFeature,\n                 ArticlePrice,\n                 Article,\n                 CartArticle,\n                 Cart,\n                 Category,\n                 Feature,\n                 Order,\n                 Photo,\n                 User,\n      \n      \n      ]\n\n    }),\n    TypeOrmModule.forFeature([\n      Administrator,\n      ArticleFeature,\n      ArticlePrice,\n      Article,\n      CartArticle,\n      Cart,\n      Category,\n      Feature,\n      Order,\n      Photo,\n      User,\n\n      ])\n  ],\n  controllers: [\n    AppController,\n    AdministratorController,\n    CategoryController,\n    ArticleController,\n    AuthController,\n    FeatureController,\n    UserCartController,\n\n  \n  \n  ],\n  providers: [\n    AdministratorService,\n    CategoryService,\n    ArticleService,\n    PhotoService,\n    FeatureService,\n    UserService,\n    CartService,\n\n  ],\n  exports:[\n    AdministratorService,\n  ]\n})\nexport class AppModule implements NestModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer\n    .apply(AuthMidleware)\n    .exclude('auth/*')\n    .forRoutes('api/*');\n  }\n\n}\n"]}