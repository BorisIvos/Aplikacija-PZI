{"version":3,"sources":["article.controller.ts"],"names":[],"mappings":"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","file":"article.controller.js","sourcesContent":["import { Body, Controller, Delete, Param, Post, Req, UploadedFile, UseInterceptors } from \"@nestjs/common\";\r\nimport { FileInterceptor } from \"@nestjs/platform-express\";\r\nimport { Crud } from \"@nestjsx/crud\";\r\nimport { Article } from \"src/entities/article.entity\";\r\nimport { AddArticleDto } from \"src/dtos/article/add.article.dto\";\r\nimport { ArticleService } from \"src/services/article/article.service\";\r\nimport { diskStorage} from \"multer\";\r\nimport { StorageConfig } from \"config/storage.config\";\r\nimport { PhotoService } from \"src/services/photo/photo.services\";\r\nimport { Photo } from \"src/entities/photo.entity\";\r\nimport { ApiResponse } from \"src/misc/api.response.class\";\r\nimport * as fileType from 'file-type';\r\nimport * as fs from 'fs';\r\nimport * as sharp from 'sharp';\r\nimport { DeleteResult } from \"typeorm\";\r\n\r\n\r\n\r\n@Controller('api/article')\r\n@Crud({\r\n    model: {\r\n        type: Article\r\n    },\r\n    params: {\r\n        id: {\r\n            field: 'article_Id',\r\n            type: 'number',\r\n            primary: true\r\n        }\r\n    },\r\n    query: {\r\n        join: {\r\n            category: {\r\n                eager: true\r\n            },\r\n            photos: {\r\n                eager: true\r\n            },\r\n            articlePrices: {\r\n                eager: true\r\n            },\r\n            articleFeatures: {\r\n                eager: true\r\n            },\r\n            features: {\r\n                eager: true\r\n            }\r\n            \r\n           \r\n            }\r\n        }\r\n         })\r\n    \r\nexport class ArticleController {\r\n    constructor(public service: ArticleService,\r\n                public photoService: PhotoService,\r\n                                \r\n        ) { }\r\n\r\n    @Post('createFull')  //Post http://localhost:3000/api/article/createFull/\r\n    createFullArticle(@Body() data: AddArticleDto){\r\n        return this.service.createFullArticle(data);\r\n    }\r\n\r\n    @Post(':id/uploadPhoto/') // POST http://localhost:3000/api/article/:id/uploadPhoto\r\n    @UseInterceptors(\r\n        FileInterceptor('photo', {\r\n            storage: diskStorage({\r\n                destination: StorageConfig.photo.destination,\r\n                filename: (req, file, callback) => {\r\n                    let original: string = file.originalname;\r\n\r\n                    let normalized = original.replace(/\\s+/g, '-');\r\n                    normalized = normalized.replace(/[^A-z0-9\\.\\-]/g, '');\r\n                    let sada = new Date();\r\n                    let datePart = '';\r\n                    datePart += sada.getFullYear().toString();\r\n                    datePart += (sada.getMonth() + 1).toString();\r\n                    datePart += sada.getDate().toString();\r\n\r\n                    let randomPart: string =\r\n                        new Array(10)\r\n                            .fill(0)\r\n                            .map(e => (Math.random() * 9).toFixed(0).toString())\r\n                            .join('');\r\n\r\n                    let fileName = datePart + '-' + randomPart + '-' + normalized;\r\n                    fileName = fileName.toLocaleLowerCase();\r\n\r\n                    callback(null, fileName);\r\n                }\r\n            }),\r\n            fileFilter: (req, file, callback) => {\r\n                // 1. Check ekstenzije: JPG, PNG\r\n                if (!file.originalname.toLowerCase().match(/\\.(jpg|png)$/)) {\r\n                    req.fileFilterError = 'Bad file extension!';\r\n                    callback(null, false);\r\n                    return;\r\n                }\r\n\r\n                // 2. Check tipa sadrzaja: image/jpeg, image/png (mimetype)\r\n                if (!(file.mimetype.includes('jpeg') || file.mimetype.includes('png'))) {\r\n                    req.fileFilterError = 'Bad file content type!';\r\n                    callback(null, false);\r\n                    return;\r\n                }\r\n\r\n                callback(null, true);\r\n            },\r\n            limits: {\r\n                files: 1,\r\n                fileSize: StorageConfig.photo.maxSize,\r\n            },\r\n        })\r\n    )\r\n    async uploadPhoto(\r\n        @Param('id') articleId: number,\r\n        @UploadedFile() photo,\r\n        @Req() req\r\n        ): Promise<ApiResponse | Photo> {\r\n           if (req.fileFilterError){\r\n               return new ApiResponse ('error', -4002, req.fileFilterError);\r\n           }\r\n\r\n           if(!photo){\r\n                return new ApiResponse('error', -4002, 'File not uploaded!');\r\n\r\n           }\r\n\r\n           \r\n\r\n           const fileTypeResult = await fileType.fromFile(photo.path);\r\n           if(!fileTypeResult) {\r\n                fs.unlinkSync(photo.path);\r\n                return new ApiResponse('error', -4002, 'Cannot detect file type!');\r\n           }\r\n\r\n           const realMimeType = fileTypeResult.mime;\r\n           if (!(realMimeType.includes('jpeg') || realMimeType.includes('png'))){\r\n               fs.unlinkSync(photo.path);\r\n               \r\n               return new ApiResponse('error', -4002, 'Bad file content type!');\r\n\r\n           }\r\n        await this.createResizedImage(photo, StorageConfig.photo.resize.thumb)\r\n        await this.createResizedImage(photo, StorageConfig.photo.resize.small)\r\n        \r\n\r\n        const newPhoto: Photo = new Photo();\r\n\r\n        newPhoto.articleId = articleId;\r\n        newPhoto.imagePath = photo.filename;\r\n\r\n        const savedPhoto = await this.photoService.add(newPhoto);\r\n        if(!savedPhoto){\r\n            return new ApiResponse('error', -4001)\r\n        }\r\n        return savedPhoto;\r\n\r\n    }\r\n    async createResizedImage(photo, resizedSettings) {\r\n        const originalFilePath = photo.path;\r\n        const fileName = photo.filename;\r\n\r\n        const destinationFilePath =\r\n        StorageConfig.photo.destination +\r\n        resizedSettings.directory +\r\n        fileName;\r\n\r\n        await sharp(originalFilePath)\r\n            .resize({\r\n                fit: 'cover',\r\n                width: resizedSettings.photo.resize.width,\r\n                height: resizedSettings.photo.resize.height,\r\n               \r\n            })\r\n            .toFile(destinationFilePath);\r\n\r\n    }\r\n   // http://localhost:3000/api/article/1/deltePhoto/45/\r\n    @Delete(':articleId/deltePhoto/:photoId')\r\n    public async deltePhoto(\r\n        @Param('articleId') articleId: number,\r\n        @Param('photoId') photoId: number,\r\n    ) {\r\n        const photo = await this.photoService.findOne({\r\n            articleId: articleId,\r\n            photoId: photoId\r\n\r\n        });\r\n\r\n        if (!photo){\r\n            return new ApiResponse('error', -4004, 'Photo not found');\r\n\r\n        }\r\n        try{ \r\n        fs.unlinkSync(StorageConfig.photo.destination + photo.imagePath);\r\n        fs.unlinkSync(StorageConfig.photo.destination +\r\n                      StorageConfig.photo.resize.thumb.directory + \r\n                      photo.imagePath);\r\n        fs.unlinkSync(StorageConfig.photo.destination +\r\n                      StorageConfig.photo.resize.small.directory + \r\n                      photo.imagePath);\r\n         } catch(e) {}\r\n       const deleteResult = await this.photoService.deleteById(photoId);\r\n\r\n       if (deleteResult.affected === 0) {\r\n           return new ApiResponse('error', -4004, 'Photo not found!');\r\n        }\r\n\r\n       return new ApiResponse('ok', 0, 'One photo deleted!');\r\n\r\n    }\r\n}\r\n\r\n\r\nfunction deleteById(id: any, number: any) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n\r\n"]}