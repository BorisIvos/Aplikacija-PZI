{"version":3,"sources":["feature.controller.ts"],"names":[],"mappings":";;;;;;;;AAAA,yCAAuD;AACvD,8DAAwD;AACxD,sCAAqC;AAErC,kEAA+D;AAC/D,gFAAkE;AAmEjE;IACG,2BAAmB,OAAuB;QAAvB,YAAO,GAAP,OAAO,CAAgB;IAAI,CAAC;IADrC,iBAAiB;QAhE9B,mBAAU,CAAC,aAAa,CAAC;QACzB,WAAI,CAAC;YACF,KAAK,EAAE;gBACH,IAAI,EAAE,wBAAO;aAChB;YACD,MAAM,EAAE;gBACJ,EAAE,EAAE;oBACA,KAAK,EAAE,WAAW;oBAClB,IAAI,EAAE,QAAQ;oBACd,OAAO,EAAE,IAAI;iBAChB;aACJ;YACD,KAAK,EAAE;gBACH,IAAI,EAAE;oBACF,QAAQ,EAAE;wBACN,KAAK,EAAE,IAAI;qBACd;oBACD,eAAe,EAAE;wBACb,KAAK,EAAE,KAAK;qBACf;oBACD,QAAQ,EAAE;wBACN,KAAK,EAAE,KAAK;qBACf;iBACJ;aACJ;YACD,MAAM,EAAE;gBACJ,IAAI,EAAE;oBACF,eAAe;oBACf,gBAAgB;oBAChB,aAAa;oBACb,YAAY;oBACZ,eAAe;iBAClB;gBACD,aAAa,EAAE;oBACX,UAAU,EAAE;wBACR,kBAAS,CAAC,qCAAgB,CAAC;wBAC3B,wCAAY,CAAC,eAAe,CAAC;qBAEhC;iBACJ;gBACD,cAAc,EAAE;oBACZ,UAAU,EAAE;wBACR,kBAAS,CAAC,qCAAgB,CAAC;wBAC3B,wCAAY,CAAC,eAAe,CAAC;qBAChC;iBAEJ;gBACD,aAAa,EAAE;oBACX,UAAU,EAAE;wBACR,kBAAS,CAAC,qCAAgB,CAAC;wBAC3B,wCAAY,CAAC,eAAe,CAAC;qBAChC;iBAEJ;gBACD,WAAW,EAAE;oBACT,UAAU,EAAE;wBACR,kBAAS,CAAC,qCAAgB,CAAC;wBAC3B,wCAAY,CAAC,eAAe,EAAE,MAAM,CAAE;qBACzC;iBACJ;aACJ;SAGH,CAAE;OACU,iBAAiB,CAE7B;IAAD,wBAAC;CAFD,AAEC,IAAA;AAFY,8CAAiB","file":"feature.controller.js","sourcesContent":["import { Controller, UseGuards } from \"@nestjs/common\";\r\nimport { Feature   } from \"src/entities/feature.entity\";\r\nimport { Crud } from \"@nestjsx/crud\";\r\nimport { FeatureService } from \"src/services/feature/feature.service\";\r\nimport { RoleCheckedGuard } from \"src/misc/role.checker.guard\";\r\nimport { AllowToRoles } from \"src/misc/allow.to.roles.descriptor\";\r\n\r\n\r\n@Controller('api/feature')\r\n@Crud({\r\n    model: {\r\n        type: Feature\r\n    },\r\n    params: {\r\n        id: {\r\n            field: 'featureId',\r\n            type: 'number',\r\n            primary: true\r\n        }\r\n    },\r\n    query: {\r\n        join: {\r\n            category: {\r\n                eager: true\r\n            },\r\n            articleFeatures: {\r\n                eager: false\r\n            },\r\n            articles: {\r\n                eager: false\r\n            }\r\n        }\r\n    },\r\n    routes: {\r\n        only: [\r\n            \"createOneBase\",\r\n            \"createManyBase\",\r\n            \"getManyBase\",\r\n            \"getOneBase\",\r\n            \"updateOneBase\",\r\n        ],\r\n        createOneBase: {\r\n            decorators: [\r\n                UseGuards(RoleCheckedGuard),\r\n                AllowToRoles('administrator'),\r\n\r\n            ],\r\n        },\r\n        createManyBase: {\r\n            decorators: [\r\n                UseGuards(RoleCheckedGuard),\r\n                AllowToRoles('administrator'),\r\n            ],\r\n            \r\n        },\r\n        updateOneBase: {\r\n            decorators: [\r\n                UseGuards(RoleCheckedGuard),\r\n                AllowToRoles('administrator'),\r\n            ],\r\n\r\n        },\r\n        getManyBase: {\r\n            decorators: [\r\n                UseGuards(RoleCheckedGuard),\r\n                AllowToRoles('administrator', 'user',)\r\n            ],\r\n        },\r\n    }\r\n    \r\n\r\n } )\r\n export class FeatureController {\r\n    constructor(public service: FeatureService) { }\r\n }\r\n\r\n"]}